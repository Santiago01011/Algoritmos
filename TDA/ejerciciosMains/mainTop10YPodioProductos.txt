#include "main.h"

void genArhivoProductos(){
    FILE *arch = fopen("archTests/productos.dat", "wb");
    if(arch == NULL)
        return;
    Producto p[] = {
        {1, "Espinaca", 130, 180.00},
        {2, "Lechuga", 100, 180.00},
        {3, "Tomate", 200, 200.00},
        {22, "Papa", 150, 100.00},
        {5, "Zanahoria", 120, 180.00},
        {6, "Cebolla", 100, 50.00},
        {15, "Ajo", 50, 30.00},
        {8, "Pimiento", 80, 70.00},
        {16, "Pepino", 70, 60.00},
        {10, "Calabaza", 90, 40.00},
        {0, "Higo", 160, 100.00},
        {4, "Banana", 170, 100.00},
        {7, "Pera", 80, 50.00},
        {9, "Manzana", 270, 70.00},
        {14, "Durazno", 340, 90.00}
    };
    fwrite(p, sizeof(Producto), sizeof(p)/sizeof(Producto), arch);
    fclose(arch);
}

int main(){
    //genArhivoProductos();
    tLista lista;
    crearLista(&lista);
    tLista podio;
    crearLista(&podio);
    tLista top10;
    crearLista(&top10);
    int cantTop10 = 0, topPodio = 0;
    void* contextoTop10[] = {&top10, &cantTop10, &cmpPrecio};
    void* contextoPodio[] = {&topPodio, &printProducto};
    

    cargarEnListaArch("archTests/productos.dat", &lista, sizeof(Producto));
    puts("Lista de productos:");
    map(&lista, imprimirLista, printProducto);
    puts("-------------------------------------------------");
    ordenarListaQuickSort(&lista, cmpPrecio);
    puts("Lista de productos ordenada por precio:");
    map(&lista, imprimirLista, printProducto);
    puts("-------------------------------------------------");
    //uso la funcion map para recorrer la lista y agregar los productos al top10
    map(&lista, mapTop10, contextoTop10);
    puts("Top 10 de productos:");
    map(&top10, imprimirLista, printProducto);
    puts("-------------------------------------------------");
    //funcion insertarEnPodio agrega los 3 primeros elementos al podio, empates se agregan segun regla top3
    insertarEnPodio(&podio, &top10, cmpPrecio);
    //mostrarPodio(&podio, cmpPrecio, printProducto);
    puts("Podio:");
    map(&podio, printPodio, contextoPodio);
    puts("-------------------------------------------------");


    
    return 0;
}